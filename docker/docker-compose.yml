services:
  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
    container_name: extension-osint-backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_PATH=/app/data/extensions_cache.db
      - API_KEY_REQUIRED=false
      - API_KEY=${API_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - CACHE_EXPIRY_DAYS=7
      - LOG_LEVEL=INFO
      - PYTHONPATH=/app
    volumes:
      - ../data:/app/data
      - ../logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.frontend
    container_name: extension-osint-frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - backend
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: extension-osint-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  redis_data:
